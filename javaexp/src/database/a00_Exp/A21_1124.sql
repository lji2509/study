/*
--과제1
	1) initcap() : 첫자만 대문자로 처리하고 나머지는 소문자로 처리하는 함수
	2) lower() : 문자열 전체를 소문자로 변환
	3) upper() : 문자열 전체를 대문자로 변환
	
--과제3
	1)length(데이터/컬럼명) : 입력되는 문자열의 길이(글자수)를 반환
	2)lengthb(데이터/컬럼명) : 입력되는 문자열의 바이트를 반환
	length는 문자열의 길이를 반환하여 length('안녕하세요') 를 하면 '안녕하세요'가 5글자이므로 5가 반환된다.
	lengthb는 문자열의 바이트를 반환하는데, 한글이나 특수문자는 1글자가 1byte가 아닌 3byte 이므로 lengthb('안녕하세요') 를 하면 15byte, 즉 15가 반환된다.

--과제5
	concat(문자열1, 문자열2) : 두 문자열을 결합처리 한다.
		문자열1 || 문자열2 동일
	||은 문자열을 여러개 결합할 때 
		문자열1 || 문자열2 || 문자열3
	위와 같이 계속 이어서 쓰면 되지만, concat은 매개변수를 2개까지만 받기 때문에,
		concat(concat(문자열1, 문자열2), '문자열3')
	위와 같이 결합할 문자열의 갯수가 늘어날수록 concat함수를 추가적으로 작성해주어야한다.

--과제8
	1) lpad : 오른쪽 정렬 후 지정한 크기보다 작은 데이터일 경우 왼쪽에 지정한 문자열 추가
	2) ltrim : 문자열 왼쪽에 지정한 문자를 삭제
	ex)
		SELECT lpad(ename,10,'#') ename FROM emp; //ename의 길이가 10보다 작을 경우 길이가 10이 될 때까지 왼쪽에 # 추가 
		SELECT ltrim('****sql****','*') FROM dual; //왼쪽에 있는 *을 *이 아닌 문자를 만날 때까지 모두 제거

--과제9
	1) trunc : 지정한 소숫점 자리까지 남기고 삭제
	2) floor : 지정한 값보다 작은 수 중에서 가장 큰 정수
	ex) 
		trunc(123.9, -2) ==> 120
		trunc(123.9, -1) ==> 123
		trunc(123.98, 1) ==> 123.9
		floor(123.9) ==> 123
		floor(123.98) ==> 123
	위와 같이 tuunc는 지정한 자릿수까지만 남기고 모두 삭제하여 출력하지만, floor는 소숫점이하만 삭제하고 정수형을 출력한다.
*/

--과제2
SELECT ename, job
FROM emp
WHERE upper(ename) LIKE '%'||upper('b')||'%' and upper(job) LIKE '%'||upper('man')||'%';

--과제4
SELECT e.*, lengthb(job) "직책명 최소크기"
FROM emp e
WHERE lengthb(job) = (
	SELECT min(lengthb(job))
	FROM emp
);

--과제6
SELECT substr('070080100',1,3)||'점' 국어, substr('070080100',4,3)||'점' 영어, concat(substr('070080100',7,3),'점') 수학
FROM dual;

--과제7
SELECT *
FROM emp
WHERE instr(job,'MAN') != 0;


/*
1. 문자열의 대소문자 처리 함수를 기능별로 기술하세요.
2. 사원명[ ] 직책명[ ] [검색] 화면에 데이터를 입력받아 조회하는 처리에 필요한 sql을 작성하세요.
	단, 사원명과 직책명은 keyword 검색하고, 대소문자 구별없이 검색이 되게 하세요.
3. length(), lengthb()의 차이점으로 한글을 기준으로 설명하세요.
4. 직책명의 최소크기를 확인하여, where 조건문으로 검색하여 데이터를 나타내세요.
5. concat와 ||의 차이점을 기술하세요.
6. '070080100' 문자를 3자리씩 추출하여 국어, 영어, 수학 점수를 표시하세요.
7. instr을 조건으로 이용하여 직책에 'MAN'키워드가 있는 데이터를 검색하세요
8. lpad함수와 ltrim함수의 차이점을 예제로 기술하세요.
9. 숫자형 함수중에 trunc와 floor의 차이점을 기술하세요.
*/